{"version":3,"file":"index.js","sources":["../src/useAutoFocus.js","../src/helpers.js","../src/useDebouncedCallback.js","../src/useDebouncedUpdates.js","../src/useDebouncedValue.js","../src/useLazyRef.js","../src/useMediaQuery.js","../src/useMergedRefs.js","../src/useMutableCallback.js","../src/useResizeObserver.js","../src/useSafely.js","../src/useToggle.js","../src/useUniqueId.js"],"sourcesContent":["// @flow\n\nimport { useEffect, useRef } from 'react';\n\ntype FocusOptions = {\n  preventScroll?: boolean,\n} | typeof undefined;\n\n/**\n * Hook to automatically request focus for an DOM element.\n *\n * @param isFocused if true, the focus will be requested\n * @param options options of the focus request\n * @return the ref which holds the element\n */\nexport const useAutoFocus = (isFocused: boolean = true, options: FocusOptions): { current: ?HTMLElement } => {\n  const elementRef = useRef<?HTMLElement>();\n\n  useEffect(() => {\n    if (isFocused && elementRef.current) {\n      elementRef.current.focus(options);\n    }\n  }, [elementRef, isFocused]);\n\n  return elementRef;\n};\n","// @flow\n\nexport const debounce = (fn: (...Array<any>) => any, delay: ?number) => {\n  if (delay === undefined || delay === null) {\n    return fn;\n  }\n\n  let timer;\n  let callback;\n\n  function f(...args: Array<any>) {\n    const context = this;\n    clearTimeout(timer);\n    callback = () => fn.apply(context, args);\n    timer = setTimeout(callback, delay);\n    return context;\n  }\n\n  f.flush = () => {\n    clearTimeout(timer);\n    callback();\n  };\n\n  f.cancel = () => clearTimeout(timer);\n\n  return f;\n};\n\nexport const isRunningOnBrowser = typeof window !== 'undefined' && window.document;\n","// @flow\n\nimport { useMemo } from 'react';\n\nimport { debounce } from './helpers';\n\n/**\n * Hook to memoize a debounced version of a callback.\n *\n * @param callback the callback to debounce\n * @param delay the number of milliseconds to delay\n * @param deps the hook dependencies\n * @return a memoized and debounced callback\n */\nexport const useDebouncedCallback = (\n  callback: (...Array<any>) => any,\n  delay: ?number,\n  deps: ?Array<any>,\n): ((...Array<any>) => any) =>\n  useMemo(() => debounce(callback, delay), Array.isArray(deps) ? [delay, ...deps] : undefined);\n","// @flow\n\nimport { useReducer, useState } from 'react';\n\nimport { useDebouncedCallback } from './useDebouncedCallback';\n\n/**\n * Hook to debounce the state updater function returned by hooks like `useState()` and `useReducer()`.\n *\n * @param pair - the state and updater pair which will be debounced\n * @param pair.0 - the state value\n * @param pair.1 - the state updater function\n * @param delay - the number of milliseconds to delay the updater\n * @return a state value and debounced updater pair\n */\nexport const useDebouncedUpdates = (\n  [value, update]: [any, () => any],\n  delay: ?number,\n) => [value, useDebouncedCallback(update, delay, [])];\n\n/**\n * Hook to create a reduced state with a debounced `dispatch()` function.\n *\n * @param reducer - the reducer function\n * @param initializerArg - the initial state value or the argument passed to the initial state generator function\n * @param initializer - the initial state generator function\n * @param delay - the number of milliseconds to delay the updater\n * @return a state and debounced `dispatch()` function\n */\nexport const useDebouncedReducer = (\n  reducer: (any, any) => any,\n  initializerArg: any,\n  initializer: (any) => any,\n  delay: ?number,\n) =>\n  useDebouncedUpdates(useReducer(reducer, initializerArg, initializer), delay);\n\n/**\n * Hook to create a state with a debounced setter function.\n *\n * @param initialValue - the initial state value or the initial state generator function\n * @param delay - the number of milliseconds to delay the updater\n * @return a state and debounced setter function\n */\nexport const useDebouncedState = (\n  initialValue: any | () => any,\n  delay: ?number,\n) => useDebouncedUpdates(useState(initialValue), delay);\n","// @flow\n\nimport { useEffect, useState } from 'react';\n\n/**\n * Hook to keep a debounced reference of a value.\n *\n * @param value the value to be debounced\n * @param delay the number of milliseconds to delay\n * @return a debounced value\n */\nexport const useDebouncedValue = (value: any, delay: number) => {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n};\n","// @flow\n\nimport { createRef, useState } from 'react';\n\n/**\n * Hook equivalent to useRef, but with a lazy initialization for computed value.\n *\n * @param initializer the function the computes the ref value\n * @return the ref\n */\nexport const useLazyRef = <T>(initializer: () => T) =>\n  useState(() => {\n    const ref = createRef<T>();\n    ref.current = initializer();\n    return ref;\n  })[0];\n","// @flow\n\nimport { useEffect, useState } from 'react';\n\nimport { isRunningOnBrowser } from './helpers';\n\n/**\n * Hook to listen to a media query.\n *\n * @param [query] - the CSS3 media query expression\n * @return `true` if the media query matches; `false` is it does not match or the query is not defined\n */\nexport const useMediaQuery = (query: string): bool => {\n  const [matches, setMatches] = useState(() => {\n    if (!query || !isRunningOnBrowser) {\n      return false;\n    }\n\n    const { matches } = window.matchMedia(query);\n    return !!matches;\n  });\n\n  useEffect(() => {\n    if (!query || !isRunningOnBrowser) {\n      return;\n    }\n\n    const mediaQueryListener = window.matchMedia(query);\n    setMatches(mediaQueryListener.matches);\n\n    const handleChange = () => {\n      setMatches(!!mediaQueryListener.matches);\n    };\n\n    mediaQueryListener.addListener(handleChange);\n\n    return () => {\n      mediaQueryListener.removeListener(handleChange);\n    };\n  }, [query]);\n\n  return matches;\n};\n","// @flow\n\nimport { useCallback } from 'react';\nimport type { Ref } from 'react';\n\n/**\n * Hook to merge refs and callbacks refs into a single callback ref. Useful when your component need a internal ref\n * while receiving a forwared ref.\n *\n * @param refs - the refs and callback refs that should be merged\n * @return a merged callback ref\n */\nexport const useMergedRefs = (...refs: Array<Ref<any>>) => useCallback((refValue: any) => {\n  refs.filter(Boolean).forEach((ref) => {\n    if (typeof ref === 'function') {\n      ref(refValue);\n      return;\n    }\n\n    if (typeof ref === 'object') {\n      ref.current = refValue;\n    }\n  });\n}, refs);\n","// @flow\n\nimport { useCallback, useRef } from 'react';\n\n/**\n * Hook to create a stable callback from a mutable one.\n *\n * @param fn the mutable callback\n * @return a stable callback\n */\nexport const useMutableCallback = (fn: (...args : any[]) => any) => {\n  const fnRef = useRef(fn);\n  fnRef.current = fn;\n\n  return useCallback((...args: any[]) => fnRef.current && (0, fnRef.current)(...args), []);\n};\n","// @flow\n\nimport { useRef, useEffect } from 'react';\n\nimport { useDebouncedState } from './useDebouncedUpdates';\n\ntype UseResizeObserverOptions = {\n  debounceDelay: ?number,\n};\n\ntype UseResizeObserverReturn = {\n  ref: { current: ?Element },\n  contentBoxSize: {\n    inlineSize: number,\n    blockSize: number,\n  },\n  borderBoxSize: {\n    inlineSize: number,\n    blockSize: number,\n  },\n};\n\n/**\n * Hook to track dimension changes in a DOM element using the ResizeObserver API.\n *\n * @param options\n * @param options.debounceDelay the number of milliseconds to delay updates\n * @return a triple containing the ref and the size information\n */\nexport const useResizeObserver = ({\n  debounceDelay,\n}: UseResizeObserverOptions = {}): UseResizeObserverReturn => {\n  const ref = useRef<?Element>();\n  const [{ contentBoxSize, borderBoxSize }, setSizes] = useDebouncedState({}, debounceDelay);\n\n  useEffect(() => {\n    const observer = new ResizeObserver(([entry]) => {\n      const { contentBoxSize, borderBoxSize }: any = entry;\n\n      if (contentBoxSize && borderBoxSize) {\n        setSizes({\n          contentBoxSize,\n          borderBoxSize,\n        });\n        return;\n      }\n\n      const { target, contentRect } = entry;\n      const { width: contentBoxInlineSize, height: contentBoxBlockSize } = contentRect;\n      const { width: borderBoxInlineSize, height: borderBoxBlockSize } = target.getBoundingClientRect();\n\n      setSizes({\n        contentBoxSize: {\n          inlineSize: contentBoxInlineSize,\n          blockSize: contentBoxBlockSize,\n        },\n        borderBoxSize: {\n          inlineSize: borderBoxInlineSize,\n          blockSize: borderBoxBlockSize,\n        },\n      });\n    });\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => {\n      observer.disconnect();\n    };\n  }, []);\n\n  return { ref, contentBoxSize, borderBoxSize };\n};\n","// @flow\n\nimport { useEffect, useRef } from 'react';\n\nimport { useMutableCallback } from './useMutableCallback';\n\n/**\n * Hook that wraps pairs of state and updater to provide a new updater which\n * can be safe and asynchronically called even after the component unmounted.\n *\n * @param pair - the state and updater pair which will be patched\n * @param pair.0 - the state value\n * @param pair.1 - the state updater function\n * @return a state value and safe updater pair\n */\nexport const useSafely = ([state, updater]: [any, () => any]) => {\n  const mountedRef = useRef(true);\n\n  useEffect(() => {\n    mountedRef.current = true;\n\n    return () => {\n      mountedRef.current = false;\n    };\n  });\n\n  const safeUpdater = useMutableCallback((...args) => {\n    if (!mountedRef.current) {\n      return;\n    }\n\n    updater(...args);\n  });\n\n  return [state, safeUpdater];\n};\n","// @flow\n\nimport { useState } from 'react';\n\n/**\n * Hook to create a toggleable boolean state.\n *\n * @param initialValue - the initial value or the initial state generator function\n * @return a state boolean value and a state toggler function\n */\nexport const useToggle = (initialValue: any | () => any) => {\n  const [value, setValue] = useState(() => (typeof initialValue === 'function' ? !!initialValue() : !!initialValue));\n  return [value, (forcedValue: any | () => any) => setValue(typeof forcedValue !== 'undefined' ? forcedValue : !value)];\n};\n","// @flow\n\nimport { useMemo } from 'react';\n\nexport const useUniqueId = (): string =>\n  useMemo(() => Math.random().toString(36).slice(2), []);\n"],"names":["useAutoFocus","isFocused","options","elementRef","useRef","useEffect","current","focus","debounce","fn","delay","undefined","timer","callback","f","args","context","clearTimeout","apply","setTimeout","flush","cancel","isRunningOnBrowser","window","document","useDebouncedCallback","deps","useMemo","Array","isArray","useDebouncedUpdates","value","update","useDebouncedReducer","reducer","initializerArg","initializer","useReducer","useDebouncedState","initialValue","useState","useDebouncedValue","debouncedValue","setDebouncedValue","useLazyRef","ref","createRef","useMediaQuery","query","matchMedia","matches","setMatches","mediaQueryListener","handleChange","addListener","removeListener","useMergedRefs","refs","useCallback","refValue","filter","Boolean","forEach","useMutableCallback","fnRef","useResizeObserver","debounceDelay","contentBoxSize","borderBoxSize","setSizes","observer","ResizeObserver","entry","target","contentRect","contentBoxInlineSize","width","contentBoxBlockSize","height","getBoundingClientRect","borderBoxInlineSize","borderBoxBlockSize","inlineSize","blockSize","observe","disconnect","useSafely","state","updater","mountedRef","safeUpdater","useToggle","setValue","forcedValue","useUniqueId","Math","random","toString","slice"],"mappings":"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"}